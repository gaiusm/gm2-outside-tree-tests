#!/bin/bash

export PATH=$HOME/opt/bin:$PATH

# we error out on the first failure.
set -e
cd source


function new_srcdir_build () {
    result=pass
    echo "building: $1"
    cd $1
    rm -rf build
    mkdir build
    cd build
}


function failure () {
    result=fail
}


function report () {
    cd ../..
    if [ "${result}" == "pass" ] ; then
	echo "successfully built: $1"
    else
	echo "failed to build: $1"
    fi
}


function build_penguin_tower () {
    new_srcdir_build penguin-tower
    ../configure
    make
    report penguin-tower
}


function build_chess_shell () {
    new_srcdir_build chess-shell
    ../configure
    make
    report chess-shell
}


function build_pge () {
    new_srcdir_build pge
    ../configure --enable-langm2
    make
    report pge
}


function build_m2bsk () {
    new_srcdir_build m2bsk
    for i in ../src/lib/imp/*.mod ; do
	echo gm2 -c -g -I../src/lib $i
	gm2 -c -g -I../src/lib $i || failure
    done
    report m2bsk
}


function build_schol_r_lea () {
    new_srcdir_build Modula-2-Portable-Bit-Manipulation
    for i in ../impls/portable/*.mod ; do
	echo gm2 -c -g -I../defs $i
	gm2 -c -g -I../defs $i || failure
    done
    report Modula-2-Portable-Bit-Manipulation
}

PRIVATEDIR=$1

function compile_private_source () {
    for subdir in * ; do
	if [ -d ${subdir} ] ; then
	    if [ -f ${subdir}/compile-source ] ; then
		echo "compiling private source for ${subdir}"
		cd ${subdir}
		bash compile-source ${subdir}
		cd ..
	    fi
	fi
    done
}

build_pge
build_chess_shell
build_penguin_tower

build_m2bsk
build_schol_r_lea

if [ ${PRIVATEDIR} != "NONE" ] ; then
    compile_private_source
fi
